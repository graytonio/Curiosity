package org.usfirst.frc.team1523.robot.commands;

import org.usfirst.frc.team1523.robot.Robot;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class Vision extends Command {

	private final int DEAD_ZONE=10;
	private double THROW_DISTANCE=60;
	private boolean lastState;

	public Vision() {
		requires(Robot.drive);
		requires(Robot.gear);
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
		double x = SmartDashboard.getNumber("X Reading", -1);
		double distance = SmartDashboard.getNumber("Distance Value", 0);
		if(Robot.x<=0){
			Robot.drive.stop();
		}else if(Robot.x>80+DEAD_ZONE){
			Robot.drive.drive(0.4, 0, 0);
			lastState=true;
		}else if(Robot.x<80-DEAD_ZONE){
			Robot.drive.drive(-0.4, 0, 0);
			lastState=false;
		}else if(Robot.distance<THROW_DISTANCE) Robot.drive.drive(0, -0.2, 0);
		else Robot.drive.stop();
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		return Robot.distance>THROW_DISTANCE;
	}

	// Called once after isFinished returns true
	protected void end() {
		Robot.drive.stop();
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
		end();
	}
}
